---
name: CI

on:
  workflow_run:
    workflows:
      - "code linter"
    types:
      - completed

defaults:
  run:
    working-directory: 'ansible-pacman'

jobs:
  arch:
    name: "${{ matrix.image }} / ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - archlinux:latest
        ansible-version:
          - '5.1'
          - '6.1'
        scenario:
          - default

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v3
        with:
          path: 'ansible-pacman'

      - name: üêç set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}

  artix:
    name: "${{ matrix.image }} / ansible: ${{ matrix.ansible-version }}"
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - artixlinux:latest
        ansible-version:
          - '5.1'
          - '6.1'
        scenario:
          - artixlinux

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v3
        with:
          path: 'ansible-pacman'

      - name: üêç set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: test with tox
        run: |
          make \
            test \
            -e TOX_SCENARIO="${{ matrix.scenario }}" \
            -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
            -e DISTRIBUTION="${{ matrix.image }}"
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          DISTRIBUTION: ${{ matrix.image }}
